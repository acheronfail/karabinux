use evdev_rs::enums::EV_KEY;

pub trait FromKBKeyCode {
    fn from_kb_key_code(key_code: &str) -> Option<Self>
    where
        Self: Sized;
}

impl FromKBKeyCode for EV_KEY {
    fn from_kb_key_code(key_code: &str) -> Option<EV_KEY> {
        match key_code {
            "caps_lock" => Some(EV_KEY::KEY_CAPSLOCK),
            // TODO: handle pairs, ie: "shift" is either "left" or "right"
            "left_control" => Some(EV_KEY::KEY_LEFTCTRL),
            "left_shift" => Some(EV_KEY::KEY_LEFTSHIFT),
            "left_option" => Some(EV_KEY::KEY_LEFTALT), // Alias for alt
            "left_command" => Some(EV_KEY::KEY_LEFTMETA), // Alias for meta
            "right_control" => Some(EV_KEY::KEY_RIGHTCTRL),
            "right_shift" => Some(EV_KEY::KEY_RIGHTSHIFT),
            "right_option" => Some(EV_KEY::KEY_RIGHTALT), // Alias for alt
            "right_command" => Some(EV_KEY::KEY_RIGHTMETA), // Alias for meta
            "fn" => Some(EV_KEY::KEY_FN),
            "return_or_enter" => Some(EV_KEY::KEY_ENTER),
            "escape" => Some(EV_KEY::KEY_ESC),
            "delete_or_backspace" => Some(EV_KEY::KEY_BACKSPACE),
            "delete_forward" => Some(EV_KEY::KEY_DELETE),
            "tab" => Some(EV_KEY::KEY_TAB),
            "spacebar" => Some(EV_KEY::KEY_SPACE),
            "hyphen" => Some(EV_KEY::KEY_MINUS),
            "equal_sign" => Some(EV_KEY::KEY_EQUAL),
            "open_bracket" => Some(EV_KEY::KEY_LEFTBRACE),
            "close_bracket" => Some(EV_KEY::KEY_RIGHTBRACE),
            "backslash" => Some(EV_KEY::KEY_BACKSLASH),
            // "non_us_pound" => Some(EV_KEY::KEY),
            "semicolon" => Some(EV_KEY::KEY_SEMICOLON),
            "quote" => Some(EV_KEY::KEY_APOSTROPHE),
            "grave_accent_and_tilde" => Some(EV_KEY::KEY_GRAVE),
            "comma" => Some(EV_KEY::KEY_COMMA),
            "period" => Some(EV_KEY::KEY_DOT),
            "slash" => Some(EV_KEY::KEY_SLASH),
            // "non_us_backslash" => Some(EV_KEY::KEY),
            "up_arrow" => Some(EV_KEY::KEY_UP),
            "down_arrow" => Some(EV_KEY::KEY_DOWN),
            "left_arrow" => Some(EV_KEY::KEY_LEFT),
            "right_arrow" => Some(EV_KEY::KEY_RIGHT),
            "page_up" => Some(EV_KEY::KEY_PAGEUP),
            "page_down" => Some(EV_KEY::KEY_PAGEDOWN),
            "home" => Some(EV_KEY::KEY_HOME),
            "end" => Some(EV_KEY::KEY_END),
            "a" => Some(EV_KEY::KEY_A),
            "b" => Some(EV_KEY::KEY_B),
            "c" => Some(EV_KEY::KEY_C),
            "d" => Some(EV_KEY::KEY_D),
            "e" => Some(EV_KEY::KEY_E),
            "f" => Some(EV_KEY::KEY_F),
            "g" => Some(EV_KEY::KEY_G),
            "h" => Some(EV_KEY::KEY_H),
            "i" => Some(EV_KEY::KEY_I),
            "j" => Some(EV_KEY::KEY_J),
            "k" => Some(EV_KEY::KEY_K),
            "l" => Some(EV_KEY::KEY_L),
            "m" => Some(EV_KEY::KEY_M),
            "n" => Some(EV_KEY::KEY_N),
            "o" => Some(EV_KEY::KEY_O),
            "p" => Some(EV_KEY::KEY_P),
            "q" => Some(EV_KEY::KEY_Q),
            "r" => Some(EV_KEY::KEY_R),
            "s" => Some(EV_KEY::KEY_S),
            "t" => Some(EV_KEY::KEY_T),
            "u" => Some(EV_KEY::KEY_U),
            "v" => Some(EV_KEY::KEY_V),
            "w" => Some(EV_KEY::KEY_W),
            "x" => Some(EV_KEY::KEY_X),
            "y" => Some(EV_KEY::KEY_Y),
            "z" => Some(EV_KEY::KEY_Z),
            "1" => Some(EV_KEY::KEY_1),
            "2" => Some(EV_KEY::KEY_2),
            "3" => Some(EV_KEY::KEY_3),
            "4" => Some(EV_KEY::KEY_4),
            "5" => Some(EV_KEY::KEY_5),
            "6" => Some(EV_KEY::KEY_6),
            "7" => Some(EV_KEY::KEY_7),
            "8" => Some(EV_KEY::KEY_8),
            "9" => Some(EV_KEY::KEY_9),
            "0" => Some(EV_KEY::KEY_0),
            "f1" => Some(EV_KEY::KEY_F1),
            "f2" => Some(EV_KEY::KEY_F2),
            "f3" => Some(EV_KEY::KEY_F3),
            "f4" => Some(EV_KEY::KEY_F4),
            "f5" => Some(EV_KEY::KEY_F5),
            "f6" => Some(EV_KEY::KEY_F6),
            "f7" => Some(EV_KEY::KEY_F7),
            "f8" => Some(EV_KEY::KEY_F8),
            "f9" => Some(EV_KEY::KEY_F9),
            "f10" => Some(EV_KEY::KEY_F10),
            "f11" => Some(EV_KEY::KEY_F11),
            "f12" => Some(EV_KEY::KEY_F12),
            "f13" => Some(EV_KEY::KEY_F13),
            "f14" => Some(EV_KEY::KEY_F14),
            "f15" => Some(EV_KEY::KEY_F15),
            "f16" => Some(EV_KEY::KEY_F16),
            "f17" => Some(EV_KEY::KEY_F17),
            "f18" => Some(EV_KEY::KEY_F18),
            "f19" => Some(EV_KEY::KEY_F19),
            "f20" => Some(EV_KEY::KEY_F20),
            "f21" => Some(EV_KEY::KEY_F21),
            "f22" => Some(EV_KEY::KEY_F22),
            "f23" => Some(EV_KEY::KEY_F23),
            "f24" => Some(EV_KEY::KEY_F24),
            "display_brightness_decrement" => Some(EV_KEY::KEY_BRIGHTNESSDOWN),
            "display_brightness_increment" => Some(EV_KEY::KEY_BRIGHTNESSUP),
            // "mission_control" => Some(EV_KEY::KEY),
            // "launchpad" => Some(EV_KEY::KEY),
            // "dashboard" => Some(EV_KEY::KEY),
            "illumination_decrement" => Some(EV_KEY::KEY_VOLUMEDOWN),
            "illumination_increment" => Some(EV_KEY::KEY_VOLUMEUP),
            "rewind" => Some(EV_KEY::KEY_REWIND),
            "play_or_pause" => Some(EV_KEY::KEY_PLAYPAUSE),
            "fastforward" => Some(EV_KEY::KEY_FASTFORWARD),
            "mute" => Some(EV_KEY::KEY_MUTE),
            "volume_decrement" => Some(EV_KEY::KEY_VOLUMEDOWN),
            "volume_increment" => Some(EV_KEY::KEY_VOLUMEUP),
            "eject" => Some(EV_KEY::KEY_EJECTCD),
            // "apple_display_brightness_decrement" => Some(EV_KEY::KEY),
            // "apple_display_brightness_increment" => Some(EV_KEY::KEY),
            // "apple_top_case_display_brightness_decrement" => Some(EV_KEY::KEY),
            // "apple_top_case_display_brightness_increment" => Some(EV_KEY::KEY),
            "keypad_num_lock" => Some(EV_KEY::KEY_NUMLOCK),
            "keypad_slash" => Some(EV_KEY::KEY_KPSLASH),
            "keypad_asterisk" => Some(EV_KEY::KEY_KPASTERISK),
            "keypad_hyphen" => Some(EV_KEY::KEY_KPMINUS),
            "keypad_plus" => Some(EV_KEY::KEY_KPPLUS),
            "keypad_enter" => Some(EV_KEY::KEY_KPENTER),
            "keypad_1" => Some(EV_KEY::KEY_KP1),
            "keypad_2" => Some(EV_KEY::KEY_KP2),
            "keypad_3" => Some(EV_KEY::KEY_KP3),
            "keypad_4" => Some(EV_KEY::KEY_KP4),
            "keypad_5" => Some(EV_KEY::KEY_KP5),
            "keypad_6" => Some(EV_KEY::KEY_KP6),
            "keypad_7" => Some(EV_KEY::KEY_KP7),
            "keypad_8" => Some(EV_KEY::KEY_KP8),
            "keypad_9" => Some(EV_KEY::KEY_KP9),
            "keypad_0" => Some(EV_KEY::KEY_KP0),
            "keypad_period" => Some(EV_KEY::KEY_KPDOT),
            "keypad_equal_sign" => Some(EV_KEY::KEY_KPEQUAL),
            "keypad_comma" => Some(EV_KEY::KEY_KPCOMMA),
            // "vk_none" => Some(EV_KEY::KEY),
            "print_screen" => Some(EV_KEY::KEY_PRINT),
            "scroll_lock" => Some(EV_KEY::KEY_SCROLLLOCK),
            "pause" => Some(EV_KEY::KEY_PAUSE),
            "insert" => Some(EV_KEY::KEY_INSERT),
            // "application" => Some(EV_KEY::KEY),
            "help" => Some(EV_KEY::KEY_HELP),
            "power" => Some(EV_KEY::KEY_POWER),
            // "execute" => Some(EV_KEY::KEY),
            "menu" => Some(EV_KEY::KEY_MENU),
            "select" => Some(EV_KEY::KEY_SELECT),
            "stop" => Some(EV_KEY::KEY_STOP),
            "again" => Some(EV_KEY::KEY_AGAIN),
            "undo" => Some(EV_KEY::KEY_UNDO),
            "cut" => Some(EV_KEY::KEY_CUT),
            "copy" => Some(EV_KEY::KEY_COPY),
            "paste" => Some(EV_KEY::KEY_PASTE),
            "find" => Some(EV_KEY::KEY_FIND),
            // "international1" => Some(EV_KEY::KEY),
            // "international2" => Some(EV_KEY::KEY),
            // "international3" => Some(EV_KEY::KEY),
            // "international4" => Some(EV_KEY::KEY),
            // "international5" => Some(EV_KEY::KEY),
            // "international6" => Some(EV_KEY::KEY),
            // "international7" => Some(EV_KEY::KEY),
            // "international8" => Some(EV_KEY::KEY),
            // "international9" => Some(EV_KEY::KEY),
            // "lang1" => Some(EV_KEY::KEY),
            // "lang2" => Some(EV_KEY::KEY),
            // "lang3" => Some(EV_KEY::KEY),
            // "lang4" => Some(EV_KEY::KEY),
            // "lang5" => Some(EV_KEY::KEY),
            // "lang6" => Some(EV_KEY::KEY),
            // "lang7" => Some(EV_KEY::KEY),
            // "lang8" => Some(EV_KEY::KEY),
            // "lang9" => Some(EV_KEY::KEY),
            // "japanese_eisuu" => Some(EV_KEY::KEY),
            // "japanese_kana" => Some(EV_KEY::KEY),
            // "japanese_pc_nfer" => Some(EV_KEY::KEY),
            // "japanese_pc_xfer" => Some(EV_KEY::KEY),
            // "japanese_pc_katakana" => Some(EV_KEY::KEY),
            // "keypad_equal_sign_as400" => Some(EV_KEY::KEY),
            // "locking_caps_lock" => Some(EV_KEY::KEY),
            // "locking_num_lock" => Some(EV_KEY::KEY),
            // "locking_scroll_lock" => Some(EV_KEY::KEY),
            "alternate_erase" => Some(EV_KEY::KEY_ALTERASE),
            // "sys_req_or_attention" => Some(EV_KEY::KEY),
            "cancel" => Some(EV_KEY::KEY_CANCEL),
            "clear" => Some(EV_KEY::KEY_CLEAR),
            // "prior" => Some(EV_KEY::KEY),
            // "return" => Some(EV_KEY::KEY),
            // "separator" => Some(EV_KEY::KEY),
            // "out" => Some(EV_KEY::KEY),
            // "oper" => Some(EV_KEY::KEY),
            // "clear_or_again" => Some(EV_KEY::KEY),
            // "cr_sel_or_props" => Some(EV_KEY::KEY),
            // "ex_sel" => Some(EV_KEY::KEY),
            "left_alt" => Some(EV_KEY::KEY_LEFTALT),
            "left_gui" => Some(EV_KEY::KEY_LEFTMETA), // Alias for meta
            "right_alt" => Some(EV_KEY::KEY_RIGHTALT),
            "right_gui" => Some(EV_KEY::KEY_RIGHTMETA), // Alias for meta
            // "vk_consumer_brightness_down" => Some(EV_KEY::KEY),
            // "vk_consumer_brightness_up" => Some(EV_KEY::KEY),
            // "vk_mission_control" => Some(EV_KEY::KEY),
            // "vk_launchpad" => Some(EV_KEY::KEY),
            // "vk_dashboard" => Some(EV_KEY::KEY),
            // "vk_consumer_illumination_down" => Some(EV_KEY::KEY),
            // "vk_consumer_illumination_up" => Some(EV_KEY::KEY),
            // "vk_consumer_previous" => Some(EV_KEY::KEY),
            // "vk_consumer_play" => Some(EV_KEY::KEY),
            // "vk_consumer_next" => Some(EV_KEY::KEY),
            "volume_down" => Some(EV_KEY::KEY_VOLUMEDOWN),
            "volume_up" => Some(EV_KEY::KEY_VOLUMEUP),
            _ => {
                eprintln!("Failed to decode key_code: {}", key_code);

                None
            }
        }
    }
}
